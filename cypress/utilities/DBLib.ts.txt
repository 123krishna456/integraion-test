import mongoose, { ConnectOptions } from 'mongoose';

const connectToDb = async (): Promise<void> => {
  const dbOptions: ConnectOptions = {
   // useNewUrlParser: true,
    //useUnifiedTopology: true,
  };
  await mongoose.connect(Cypress.env('MONGODB_URI'), dbOptions);
};


const disconnectFromDb = async (): Promise<void> => {
  await mongoose.connection.close();
};

const clearDb = async (): Promise<void> => {
  const collections = mongoose.connection.collections;
  for (const key in collections) {
    const collection = collections[key];
    await collection.deleteMany({});
  }
};

const insertData = async (collectionName: string, data: any): Promise<void> => {
  await mongoose.connection.collection(collectionName).insertMany(data);
};

const findData = async (collectionName: string, query: any): Promise<any> => {
  return await mongoose.connection.collection(collectionName).find(query).toArray();
};

const updateData = async (collectionName: string, query: any, data: any): Promise<void> => {
  await mongoose.connection.collection(collectionName).updateMany(query, { $set: data });
};

const deleteData = async (collectionName: string, query: any): Promise<void> => {
  await mongoose.connection.collection(collectionName).deleteMany(query);
};

export {
  connectToDb,
  disconnectFromDb,
  clearDb,
  insertData,
  findData,
  updateData,
  deleteData,
};